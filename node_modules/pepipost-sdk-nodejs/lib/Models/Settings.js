
/**
 * PepipostAPIV10Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 08/20/2016
 */
var BaseModel = require("./BaseModel");
/**
 * Creates a instance of Settings
 *
 * @constructor
 */
Settings = function (obj) {
    if(!obj) {
        this.attachmentid = null;     
        this.bcc = null;     
        this.clicktrack  = true;     
        this.footer  = true;     
        this.opentrack  = true;     
        this.template = null;     
        this.unsubscribe  = true;     
    } else {
        this.attachmentid = obj.attachmentid;
        this.bcc = obj.bcc;
        this.clicktrack = obj.clicktrack;
        this.footer = obj.footer;
        this.opentrack = obj.opentrack;
        this.template = obj.template;
        this.unsubscribe = obj.unsubscribe;
    }
};

Settings.prototype = new BaseModel();
Settings.prototype.constructor = Settings;

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
Settings.prototype.getAttachmentid = function() {
    return this.attachmentid;
};

/**
 * Setter for Attachmentid
 * 
 * @param {string|null} value 
 */
Settings.prototype.setAttachmentid = function(value) {
    this.attachmentid = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
Settings.prototype.getBcc = function() {
    return this.bcc;
};

/**
 * Setter for Bcc
 * 
 * @param {string|null} value 
 */
Settings.prototype.setBcc = function(value) {
    this.bcc = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
Settings.prototype.getClicktrack = function() {
    return this.clicktrack;
};

/**
 * Setter for Clicktrack
 * 
 * @param {bool|null} value 
 */
Settings.prototype.setClicktrack = function(value) {
    this.clicktrack = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
Settings.prototype.getFooter = function() {
    return this.footer;
};

/**
 * Setter for Footer
 * 
 * @param {bool|null} value 
 */
Settings.prototype.setFooter = function(value) {
    this.footer = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
Settings.prototype.getOpentrack = function() {
    return this.opentrack;
};

/**
 * Setter for Opentrack
 * 
 * @param {bool|null} value 
 */
Settings.prototype.setOpentrack = function(value) {
    this.opentrack = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {int|null}
 */
Settings.prototype.getTemplate = function() {
    return this.template;
};

/**
 * Setter for Template
 * 
 * @param {int|null} value 
 */
Settings.prototype.setTemplate = function(value) {
    this.template = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
Settings.prototype.getUnsubscribe = function() {
    return this.unsubscribe;
};

/**
 * Setter for Unsubscribe
 * 
 * @param {bool|null} value 
 */
Settings.prototype.setUnsubscribe = function(value) {
    this.unsubscribe = value;
};


module.exports = Settings;